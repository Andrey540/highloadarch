version: '3.5'

services:
  mysql-node-1:
    image: percona/percona-server:8.0
    container_name: mysql-node-1
    hostname: mysql-node-1
    ports:
      - "3307:3306"
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: socialnetwork
      MYSQL_USER: socialnetwork
      MYSQL_PASSWORD: passwd
    command: [ "mysqld",
               "--loose-group-replication-local-address=mysql-node-1:6606" ]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
    volumes:
      - "socialnetwork-db-data-1:/var/lib/mysql"
      - "${PWD}/data/mysql/config/common/:/etc/my.cnf.d"

  mysql-node-2:
    image: percona/percona-server:8.0
    container_name: mysql-node-2
    hostname: mysql-node-2
    ports:
      - "3308:3306"
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: [ "mysqld",
               "--loose-group-replication-local-address=mysql-node-2:6606" ]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
    volumes:
      - "socialnetwork-db-data-2:/var/lib/mysql"
      - "${PWD}/data/mysql/config/common/:/etc/my.cnf.d"
    depends_on:
      - mysql-node-1

  mysql-node-3:
    image: percona/percona-server:8.0
    container_name: mysql-node-3
    hostname: mysql-node-3
    ports:
      - "3309:3306"
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: [ "mysqld",
               "--loose-group-replication-local-address=mysql-node-3:6606" ]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
    volumes:
      - "socialnetwork-db-data-3:/var/lib/mysql"
      - "${PWD}/data/mysql/config/common/:/etc/my.cnf.d"
    depends_on:
      - mysql-node-1

  mysql-post:
    image: mysql:5.7
    container_name: mysql-post
    hostname: mysql-post
    ports:
      - "3310:3306"
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: post
      MYSQL_USER: socialnetwork
      MYSQL_PASSWORD: passwd
    command: [ "mysqld" ]
    volumes:
      - "socialnetwork-db-post-data:/var/lib/mysql"
      - "${PWD}/data/mysql/config/post/:/etc/mysql/conf.d"
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  redis:
    image: "redis"
    container_name: redis

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "8885:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  tarantool:
    image: tarantool/tarantool:latest
    container_name: tarantool
    command: [ "tarantool", "/opt/tarantool/tarantool.lua" ]
    ports:
      - "3301:3301"
    volumes:
      - "socialnetwork-db-tarantool:/var/lib/tarantool"
      - "${PWD}/tarantool/lua:/opt/tarantool"

  tarantool-replicator:
    image: andrey540/mysql-tarantool-replication
    container_name: tarantool-replicator
    privileged: true
    volumes:
      - "${PWD}/tarantool/config/:/usr/local/etc/replicatord"
    depends_on:
      - mysql-post
      - tarantool

  realtime-1:
    image: "centrifugo/centrifugo:v3.1.1"
    container_name: realtime-1
    ports:
      - "8886:8000"
    environment:
      - CENTRIFUGO_SECRET=my-secret-token
      - CENTRIFUGO_API_KEY=my-api-key
      - CENTRIFUGO_ADMIN_PASSWORD=admin
      - CENTRIFUGO_ADMIN_SECRET=admin
    command: centrifugo --config=config.json
    volumes:
      - "${PWD}/centrifugo:/centrifugo"

  realtime-2:
    image: "centrifugo/centrifugo:v3.1.1"
    container_name: realtime-2
    ports:
      - "8887:8000"
    environment:
      - CENTRIFUGO_SECRET=my-secret-token
      - CENTRIFUGO_API_KEY=my-api-key
      - CENTRIFUGO_ADMIN_PASSWORD=admin
      - CENTRIFUGO_ADMIN_SECRET=admin
    command: centrifugo --config=config.json
    volumes:
      - "${PWD}/centrifugo:/centrifugo"

  socialnetwork:
    image: "andrey540/socialnetwork:v7"
    container_name: socialnetwork
    ports:
      - "8881:8001"
    environment:
      REDIS_HOST: redis
      SERVICE_HOST: http://socialnetwork:8001
      SERVE_REST_ADDRESS: :8001
      USER_SERVICE_URL: http://user:8002
      CONVERSATION_SERVICE_URL: http://conversation:8003
      POST_SERVICE_URL: http://post:8004
      REALTIME_HOSTS: '[
        "ws://127.0.0.1:8886/connection/websocket",
        "ws://127.0.0.1:8887/connection/websocket"
      ]'
    depends_on:
      - user
      - conversation
      - post
      - redis

  user:
    image: "andrey540/user:v7"
    container_name: user
    ports:
      - "8882:8002"
    environment:
      DB_MASTER_HOST: mysql-node-1
      DB_SLAVE_HOST: mysql-node-1
      DB_NAME: socialnetwork
      DB_USER: socialnetwork
      DB_PASSWORD: passwd
      DB_MAX_CONN: 50
      AMQP_HOST: rabbitmq
      AMQP_USER: guest
      AMQP_PASSWORD: guest
      AMQP_ENABLED: 1
      SERVICE_HOST: http://user:8002
      SERVE_REST_ADDRESS: :8002
    depends_on:
      - mysql-node-1
      - mysql-node-2
      - mysql-node-3

  conversation:
    image: "andrey540/conversation:v7"
    container_name: conversation
    ports:
      - "8883:8003"
    environment:
      SCHEMA_HOST: vtctld
      SCHEMA_PORT: 15999
      DB_HOST: vtgate
      DB_PORT: 15999
      DB_NAME: conversation_keyspace
      DB_USER: socialnetwork
      DB_PASSWORD: passwd
      DB_MAX_CONN: 50
      SERVICE_HOST: http://conversation:8003
      SERVE_REST_ADDRESS: :8003
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - wget -nv -t1 --spider localhost:8003/health
    depends_on:
      - vtgate
      - vtctld

  post:
    image: "andrey540/post:v7"
    container_name: post
    ports:
      - "8884:8004"
    environment:
      TARANTOOL_HOST: tarantool
      TARANTOOL_PORT: 3301
      DB_HOST: mysql-post
      DB_NAME: post
      DB_USER: socialnetwork
      DB_PASSWORD: passwd
      DB_MAX_CONN: 50
      AMQP_HOST: rabbitmq
      AMQP_USER: guest
      AMQP_PASSWORD: guest
      AMQP_ENABLED: 1
      AMQP_SUPPRESS_EVENT_READING: 1
      WORKERS_COUNT: 2
      SERVICE_HOST: http://post:8004
      SERVE_REST_ADDRESS: :8004
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - wget -nv -t1 --spider localhost:8003/health
    depends_on:
      - mysql-post

  post-worker-1:
    image: "andrey540/post:v7"
    container_name: post-worker-1
    environment:
      TARANTOOL_HOST: tarantool
      TARANTOOL_PORT: 3301
      DB_HOST: mysql-post
      DB_NAME: post
      DB_USER: socialnetwork
      DB_PASSWORD: passwd
      DB_MAX_CONN: 50
      AMQP_HOST: rabbitmq
      AMQP_USER: guest
      AMQP_PASSWORD: guest
      AMQP_ENABLED: 1
      WORKERS_COUNT: 2
      AMQP_ROUTING_KEY: 1
      REALTIME_HOSTS: '[
              "ws://realtime-1:8000/connection/websocket",
              "ws://realtime-2:8000/connection/websocket"
            ]'
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - wget -nv -t1 --spider localhost:8003/health
    depends_on:
      - mysql-post
      - realtime-1
      - realtime-2

  post-worker-2:
    image: "andrey540/post:v7"
    container_name: post-worker-2
    environment:
      TARANTOOL_HOST: tarantool
      TARANTOOL_PORT: 3301
      DB_HOST: mysql-post
      DB_NAME: post
      DB_USER: socialnetwork
      DB_PASSWORD: passwd
      DB_MAX_CONN: 50
      AMQP_HOST: rabbitmq
      AMQP_USER: guest
      AMQP_PASSWORD: guest
      AMQP_ENABLED: 1
      WORKERS_COUNT: 2
      AMQP_ROUTING_KEY: 2
      REALTIME_HOSTS: '[
                    "ws://realtime-1:8000/connection/websocket",
                    "ws://realtime-2:8000/connection/websocket"
                  ]'
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - wget -nv -t1 --spider localhost:8003/health
    depends_on:
      - mysql-post
      - realtime-1
      - realtime-2

  consul1:
    command: agent -server -bootstrap-expect 3 -ui -disable-host-node-id -client 0.0.0.0
    hostname: consul1
    image: consul:latest
    ports:
      - 8400:8400
      - 8500:8500
      - 8600:8600

  consul2:
    command: agent -server -retry-join consul1 -disable-host-node-id
    depends_on:
      - consul1
    expose:
      - "8400"
      - "8500"
      - "8600"
    hostname: consul2
    image: consul:latest

  consul3:
    command: agent -server -retry-join consul1 -disable-host-node-id
    depends_on:
      - consul1
    expose:
      - "8400"
      - "8500"
      - "8600"
    hostname: consul3
    image: consul:latest

  schemaload_conversation_keyspace:
    command:
      - sh
      - -c
      - /script/schemaload.sh
    depends_on:
      - vttablet101
    environment:
      - TOPOLOGY_FLAGS=-topo_implementation consul -topo_global_server_address consul1:8500
        -topo_global_root vitess/global
      - WEB_PORT=8080
      - GRPC_PORT=15999
      - CELL=test
      - KEYSPACE=conversation_keyspace
      - TARGETTAB=test-0000000101
      - SLEEPTIME=15
      - VSCHEMA_FILE=conversation_keyspace_vschema.json
      - SCHEMA_FILES=conversation_keyspace_schema_file.sql
      - POST_LOAD_FILE=
      - EXTERNAL_DB=0
    image: vitess/lite:${VITESS_TAG:-latest}
    volumes:
      - "${PWD}/vitess:/script"

  vreplication:
    command:
      - sh
      - -c
      - '[ $$EXTERNAL_DB -eq 1 ] && /script/externaldb_vreplication.sh || exit 0'
    depends_on:
      - vtctld
    environment:
      - TOPOLOGY_FLAGS=-topo_implementation consul -topo_global_server_address consul1:8500
        -topo_global_root vitess/global
      - EXTERNAL_DB=0
    image: vitess/lite:${VITESS_TAG:-latest}
    volumes:
      - "${PWD}/vitess:/script"

  vtctld:
    command:
      - sh
      - -c
      - ' /vt/bin/vtctld -topo_implementation consul -topo_global_server_address consul1:8500
      -topo_global_root vitess/global -cell test -workflow_manager_init -workflow_manager_use_election
      -service_map ''grpc-vtctl'' -backup_storage_implementation file -file_backup_storage_root
      /vt/vtdataroot/backups -logtostderr=true -port 8080 -grpc_port 15999 '
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - 15000:8080
      - "15999"
    volumes:
      - "${PWD}/vitess:/script"

  vtgate:
    command:
      - sh
      - -c
      - '/script/run-forever.sh /vt/bin/vtgate -topo_implementation consul -topo_global_server_address
      consul1:8500 -topo_global_root vitess/global -logtostderr=true -port 8080 -grpc_port
      15999 -mysql_server_port 15306 -mysql_auth_server_impl none -cell test -cells_to_watch
      test -tablet_types_to_wait PRIMARY,REPLICA,RDONLY -service_map ''grpc-vtgateservice''
      -normalize_queries=true '
    depends_on:
      - vtctld
      - vtorc
      - vttablet102
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - 15099:8080
      - "15999"
      - 15306:15306
    volumes:
      - "${PWD}/vitess:/script"

  vtorc:
    command:
      - sh
      - -c
      - /script/vtorc-up.sh
    depends_on:
      - vtctld
    environment:
      - TOPOLOGY_FLAGS=-topo_implementation consul -topo_global_server_address consul1:8500
        -topo_global_root vitess/global
      - EXTERNAL_DB=0
      - DB_USER=
      - DB_PASS=
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - 13000:3000
    volumes:
      - "${PWD}/vitess:/script"

  vttablet101:
    command:
      - sh
      - -c
      - /script/vttablet-up.sh 101
    depends_on:
      - vtctld
    environment:
      - TOPOLOGY_FLAGS=-topo_implementation consul -topo_global_server_address consul1:8500
        -topo_global_root vitess/global
      - WEB_PORT=8080
      - GRPC_PORT=15999
      - CELL=test
      - KEYSPACE=conversation_keyspace
      - SHARD=0
      - ROLE=primary
      - VTHOST=vttablet101
      - EXTERNAL_DB=0
      - DB_PORT=
      - DB_HOST=
      - DB_USER=
      - DB_PASS=
      - DB_CHARSET=
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - curl -s --fail --show-error localhost:8080/debug/health
      timeout: 10s
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - 15101:8080
      - "15999"
      - "3306"
    volumes:
      - "${PWD}/vitess:/script"

  vttablet102:
    command:
      - sh
      - -c
      - /script/vttablet-up.sh 102
    depends_on:
      - vtctld
    environment:
      - TOPOLOGY_FLAGS=-topo_implementation consul -topo_global_server_address consul1:8500
        -topo_global_root vitess/global
      - WEB_PORT=8080
      - GRPC_PORT=15999
      - CELL=test
      - KEYSPACE=conversation_keyspace
      - SHARD=0
      - ROLE=replica
      - VTHOST=vttablet102
      - EXTERNAL_DB=0
      - DB_PORT=
      - DB_HOST=
      - DB_USER=
      - DB_PASS=
      - DB_CHARSET=
    healthcheck:
      interval: 30s
      retries: 15
      test:
        - CMD-SHELL
        - curl -s --fail --show-error localhost:8080/debug/health
      timeout: 10s
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - 15102:8080
      - "15999"
      - "3306"
    volumes:
      - "${PWD}/vitess:/script"

  vtwork:
    command:
      - sh
      - -c
      - '/vt/bin/vtworker -topo_implementation consul -topo_global_server_address consul1:8500
      -topo_global_root vitess/global -cell test -logtostderr=true -service_map ''grpc-vtworker''
      -port 8080 -grpc_port 15999 -use_v3_resharding_mode=true '
    depends_on:
      - vtctld
    image: vitess/lite:${VITESS_TAG:-latest}
    ports:
      - "8080"
      - "15999"

volumes:
  socialnetwork-db-data-1:
  socialnetwork-db-data-2:
  socialnetwork-db-data-3:
  socialnetwork-db-post-data:
  socialnetwork-db-tarantool: